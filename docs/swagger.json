{
    "swagger": "2.0",
    "info": {
        "description": "This is an items API",
        "title": "Booker Api",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/book_cost_items/create": {
            "post": {
                "description": "Create new items data in Db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Create items",
                "parameters": [
                    {
                        "description": "Create items",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserCostItems"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book_cost_items/delete/{id}": {
            "delete": {
                "description": "Delete items data from Db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Delete item by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book_cost_items/get_all": {
            "get": {
                "description": "Get all items recorded to DB",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get all items",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book_cost_items/get_only_one/{id}": {
            "get": {
                "description": "Get Items By Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get Items By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "item id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book_cost_items/update/{id}": {
            "post": {
                "description": "Update items data in Db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Update Items",
                "parameters": [
                    {
                        "description": "Items struct",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserCostItems"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book_daily_expense/create": {
            "post": {
                "description": "Expense Create",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expense"
                ],
                "summary": "Expense Create",
                "parameters": [
                    {
                        "description": "Create expense",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserExpense"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book_daily_expense/get_by_date": {
            "get": {
                "description": "Get Expense By date",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expense"
                ],
                "summary": "Get Expense By date",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book_daily_expense/get_by_date_and_item": {
            "get": {
                "description": "Get Expense Summ By Item and Date",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expense"
                ],
                "summary": "Get Expense Summ By Item and Date",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book_daily_expense/get_by_id/{id}": {
            "get": {
                "description": "Get Expense By Item",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expense"
                ],
                "summary": "Get Expense By Item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "item id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book_daily_expense/get_summ_by_period": {
            "get": {
                "description": "Get Expense Summ By Period",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expense"
                ],
                "summary": "Get Expense Summ By Period",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.UserCostItems": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item_name": {
                    "type": "string"
                }
            }
        },
        "model.UserExpense": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item": {
                    "type": "string"
                },
                "item_id": {
                    "type": "integer"
                }
            }
        }
    },
    "externalDocs": {
        "url": "https://swagger.io/resources/open-api/"
    }
}